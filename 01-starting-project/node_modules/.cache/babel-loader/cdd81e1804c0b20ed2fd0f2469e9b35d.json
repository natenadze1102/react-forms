{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G.Natenadze\\\\Desktop\\\\react11\\\\react-forms\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [nameInputIsTouched, setNameInputIsTouched] = useState(false);\n  const [emailInputIsTouched, setEmailInputIsTouched] = useState(false);\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [inputEmail, setInputEmail] = useState(\"\");\n  const i = useRef(null);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const enteredEmailIsValid = inputEmail.includes('@');\n  const nameInputIsInvalid = !enteredNameIsValid && nameInputIsTouched;\n  const emailInputIsInvalid = !enteredEmailIsValid && emailInputIsTouched;\n  let formIsValid = enteredNameIsValid && enteredEmailIsValid;\n  console.log(enteredNameIsValid, enteredEmailIsValid, formIsValid);\n\n  const inputHandler = e => {\n    // setEnteredName(i.current.value);\n    // same result\n    setEnteredName(e.target.value);\n    setNameInputIsTouched(true);\n  };\n\n  const inputEmailHandler = e => {\n    setInputEmail(e.target.value);\n    setEmailInputIsTouched(true);\n  };\n\n  const nameInputBlurHandler = () => {\n    setNameInputIsTouched(true);\n  };\n\n  const emailInputBlurHandler = () => {\n    setEmailInputIsTouched(true);\n  };\n\n  const formSubmittionHandler = e => {\n    e.preventDefault();\n    setNameInputIsTouched(true);\n    setEmailInputIsTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setInputEmail('');\n    setNameInputIsTouched(false);\n    setEmailInputIsTouched(false);\n  };\n\n  const nameInputClasses = !nameInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  const emailInputClasses = !emailInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmittionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: i,\n        onChange: inputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), !enteredNameIsValid && nameInputIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Name must not be empty\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: inputEmailHandler,\n        onBlur: emailInputBlurHandler,\n        value: inputEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), !enteredEmailIsValid && emailInputIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Name must not be empty\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        className: !formIsValid ? 'disabled' : '',\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: enteredName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"bxU44J3t6pb1gRhYtt9hUOXB1T8=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useRef","useState","SimpleInput","props","nameInputIsTouched","setNameInputIsTouched","emailInputIsTouched","setEmailInputIsTouched","enteredName","setEnteredName","inputEmail","setInputEmail","i","enteredNameIsValid","trim","enteredEmailIsValid","includes","nameInputIsInvalid","emailInputIsInvalid","formIsValid","console","log","inputHandler","e","target","value","inputEmailHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmittionHandler","preventDefault","nameInputClasses","emailInputClasses"],"sources":["C:/Users/G.Natenadze/Desktop/react11/react-forms/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nconst SimpleInput = (props) => {\r\n  const [nameInputIsTouched, setNameInputIsTouched] = useState(false);\r\n  const [emailInputIsTouched, setEmailInputIsTouched] = useState(false);\r\n\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [inputEmail, setInputEmail] = useState(\"\")\r\n\r\n  const i = useRef(null);\r\n\r\n  const enteredNameIsValid = enteredName.trim() !== \"\";\r\n  const enteredEmailIsValid = inputEmail.includes('@');\r\n\r\n  const nameInputIsInvalid = !enteredNameIsValid && nameInputIsTouched;\r\n  const emailInputIsInvalid = !enteredEmailIsValid && emailInputIsTouched;\r\n\r\n  let formIsValid = enteredNameIsValid && enteredEmailIsValid;\r\n\r\n\r\n  console.log(enteredNameIsValid, enteredEmailIsValid, formIsValid)\r\n\r\n  const inputHandler = (e) => {\r\n    // setEnteredName(i.current.value);\r\n\r\n    // same result\r\n    setEnteredName(e.target.value)\r\n    setNameInputIsTouched(true);\r\n  };\r\n\r\n  const inputEmailHandler = (e) => {\r\n    setInputEmail(e.target.value);\r\n    setEmailInputIsTouched(true);\r\n  }\r\n\r\n\r\n  const nameInputBlurHandler = () => {\r\n    setNameInputIsTouched(true);\r\n  };\r\n\r\n  const emailInputBlurHandler = () => {\r\n    setEmailInputIsTouched(true);\r\n\r\n  }\r\n\r\n  const formSubmittionHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setNameInputIsTouched(true);\r\n    setEmailInputIsTouched(true);\r\n\r\n\r\n    if (enteredName.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    setEnteredName(\"\");\r\n    setInputEmail('')\r\n    setNameInputIsTouched(false);\r\n    setEmailInputIsTouched(false);\r\n  };\r\n\r\n  const nameInputClasses = !nameInputIsInvalid\r\n    ? \"form-control\"\r\n    : \"form-control invalid\";\r\n\r\n  const emailInputClasses = !emailInputIsInvalid\r\n    ? \"form-control\"\r\n    : \"form-control invalid\";\r\n\r\n  return (\r\n    <form onSubmit={formSubmittionHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          ref={i}\r\n          onChange={inputHandler}\r\n          onBlur={nameInputBlurHandler}\r\n          value={enteredName}\r\n        />\r\n      </div>\r\n      {!enteredNameIsValid && nameInputIsTouched && <p>\"Name must not be empty\"</p>}\r\n\r\n      <div className={emailInputClasses}>\r\n        <label htmlFor=\"email\">Your Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          onChange={inputEmailHandler}\r\n          onBlur={emailInputBlurHandler}\r\n          value={inputEmail}\r\n        />\r\n      </div>\r\n      {!enteredEmailIsValid && emailInputIsTouched && <p>\"Name must not be empty\"</p>}\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid} className={!formIsValid ? 'disabled' : ''}>Submit</button>\r\n      </div>\r\n      <div>{enteredName}</div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}