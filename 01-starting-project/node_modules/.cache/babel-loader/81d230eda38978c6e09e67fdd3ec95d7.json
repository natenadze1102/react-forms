{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G.Natenadze\\\\Desktop\\\\react11\\\\react-forms\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const i = useRef(null); // const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName => {\n    return enteredName.trim() !== \"\";\n  };\n\n  const enteredEmailIsValid = inputEmail => {\n    inputEmail.includes('@');\n  };\n\n  const {\n    value: enteredName,\n    hasError: nameInputIsInvalid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler\n  } = useInput(enteredNameIsValid);\n  console.log(enteredName, nameInputIsInvalid, nameChangeHandler, nameInputBlurHandler, enteredNameTouched);\n  const {\n    inputEmail,\n    emailInputIsInvalid,\n    inputEmailHandler,\n    emailInputBlurHandler\n  } = useInput(enteredEmailIsValid); // const [emailInputIsTouched, setEmailInputIsTouched] = useState(false);\n  // const [inputEmail, setInputEmail] = useState(\"\")\n  // const enteredEmailIsValid = inputEmail.includes('@');\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  // const emailInputIsInvalid = !enteredEmailIsValid && emailInputIsTouched;\n\n  let formIsValid = enteredNameIsValid && enteredEmailIsValid; // const nameChangeHandler = (e) => {\n  //   setEnteredName(e.target.value)\n  // };\n  // const inputEmailHandler = (e) => {\n  //   setInputEmail(e.target.value);\n  //   setEmailInputIsTouched(true);\n  // }\n  // const nameInputBlurHandler = () => {\n  //   setEnteredNameTouched(true);\n  // };\n  // const emailInputBlurHandler = () => {\n  //   setEmailInputIsTouched(true);\n  // }\n  // const formSubmittionHandler = (e) => {\n  //   e.preventDefault();\n  //   setEnteredNameTouched(true);\n  //   setEmailInputIsTouched(true);\n  //   if (enteredName.trim() === \"\") {\n  //     return;\n  //   }\n  //   setEnteredName(\"\");\n  //   setInputEmail('')\n  //   setEnteredNameTouched(false);\n  //   setEmailInputIsTouched(false);\n  // };\n\n  const nameInputClasses = !nameInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  const emailInputClasses = !emailInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: i,\n        onChange: nameChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Name must not be empty\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: inputEmailHandler,\n        onBlur: emailInputBlurHandler,\n        value: inputEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Name must not be empty\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        className: !formIsValid ? 'disabled' : '',\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: enteredName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"GMtCI4TwbMs3vm2/MXF3TRVwkl8=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useRef","useState","useInput","SimpleInput","props","i","enteredNameIsValid","enteredName","trim","enteredEmailIsValid","inputEmail","includes","value","hasError","nameInputIsInvalid","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","console","log","enteredNameTouched","emailInputIsInvalid","inputEmailHandler","emailInputBlurHandler","formIsValid","nameInputClasses","emailInputClasses","error"],"sources":["C:/Users/G.Natenadze/Desktop/react11/react-forms/01-starting-project/src/components/SimpleInput.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport useInput from \"../hooks/use-input\";\r\n\r\nconst SimpleInput = (props) => {\r\n  const i = useRef(null);\r\n  // const [enteredName, setEnteredName] = useState(\"\");\r\n  // const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n  const enteredNameIsValid = (enteredName) => {\r\n    return enteredName.trim() !== \"\";\r\n  }\r\n\r\n  const enteredEmailIsValid = (inputEmail) => {\r\n    inputEmail.includes('@');\r\n  }\r\n\r\n  const { value: enteredName, hasError: nameInputIsInvalid, valueChangeHandler: nameChangeHandler, inputBlurHandler: nameInputBlurHandler } = useInput(enteredNameIsValid);\r\n  console.log(enteredName, nameInputIsInvalid, nameChangeHandler, nameInputBlurHandler, enteredNameTouched)\r\n  const { inputEmail, emailInputIsInvalid, inputEmailHandler, emailInputBlurHandler } = useInput(enteredEmailIsValid);\r\n\r\n  // const [emailInputIsTouched, setEmailInputIsTouched] = useState(false);\r\n  // const [inputEmail, setInputEmail] = useState(\"\")\r\n\r\n  // const enteredEmailIsValid = inputEmail.includes('@');\r\n\r\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n  // const emailInputIsInvalid = !enteredEmailIsValid && emailInputIsTouched;\r\n\r\n  let formIsValid = enteredNameIsValid && enteredEmailIsValid;\r\n\r\n  // const nameChangeHandler = (e) => {\r\n\r\n  //   setEnteredName(e.target.value)\r\n\r\n  // };\r\n\r\n  // const inputEmailHandler = (e) => {\r\n  //   setInputEmail(e.target.value);\r\n  //   setEmailInputIsTouched(true);\r\n  // }\r\n\r\n\r\n  // const nameInputBlurHandler = () => {\r\n  //   setEnteredNameTouched(true);\r\n  // };\r\n\r\n  // const emailInputBlurHandler = () => {\r\n  //   setEmailInputIsTouched(true);\r\n\r\n  // }\r\n\r\n  // const formSubmittionHandler = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   setEnteredNameTouched(true);\r\n  //   setEmailInputIsTouched(true);\r\n\r\n\r\n  //   if (enteredName.trim() === \"\") {\r\n  //     return;\r\n  //   }\r\n\r\n  //   setEnteredName(\"\");\r\n  //   setInputEmail('')\r\n  //   setEnteredNameTouched(false);\r\n  //   setEmailInputIsTouched(false);\r\n  // };\r\n\r\n  const nameInputClasses = !nameInputIsInvalid\r\n    ? \"form-control\"\r\n    : \"form-control invalid\";\r\n\r\n  const emailInputClasses = !emailInputIsInvalid\r\n    ? \"form-control\"\r\n    : \"form-control invalid\";\r\n\r\n  return (\r\n    <form >\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          ref={i}\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameInputBlurHandler}\r\n          value={enteredName}\r\n        />\r\n      </div>\r\n      {error && <p>\"Name must not be empty\"</p>}\r\n\r\n      <div className={emailInputClasses}>\r\n        <label htmlFor=\"email\">Your Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          onChange={inputEmailHandler}\r\n          onBlur={emailInputBlurHandler}\r\n          value={inputEmail}\r\n        />\r\n      </div>\r\n      {error && <p>\"Name must not be empty\"</p>}\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid} className={!formIsValid ? 'disabled' : ''}>Submit</button>\r\n      </div>\r\n      <div>{enteredName}</div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,CAAC,GAAGL,MAAM,CAAC,IAAD,CAAhB,CAD6B,CAE7B;EACA;;EACA,MAAMM,kBAAkB,GAAIC,WAAD,IAAiB;IAC1C,OAAOA,WAAW,CAACC,IAAZ,OAAuB,EAA9B;EACD,CAFD;;EAIA,MAAMC,mBAAmB,GAAIC,UAAD,IAAgB;IAC1CA,UAAU,CAACC,QAAX,CAAoB,GAApB;EACD,CAFD;;EAIA,MAAM;IAAEC,KAAK,EAAEL,WAAT;IAAsBM,QAAQ,EAAEC,kBAAhC;IAAoDC,kBAAkB,EAAEC,iBAAxE;IAA2FC,gBAAgB,EAAEC;EAA7G,IAAsIhB,QAAQ,CAACI,kBAAD,CAApJ;EACAa,OAAO,CAACC,GAAR,CAAYb,WAAZ,EAAyBO,kBAAzB,EAA6CE,iBAA7C,EAAgEE,oBAAhE,EAAsFG,kBAAtF;EACA,MAAM;IAAEX,UAAF;IAAcY,mBAAd;IAAmCC,iBAAnC;IAAsDC;EAAtD,IAAgFtB,QAAQ,CAACO,mBAAD,CAA9F,CAd6B,CAgB7B;EACA;EAEA;EAEA;EACA;;EAEA,IAAIgB,WAAW,GAAGnB,kBAAkB,IAAIG,mBAAxC,CAxB6B,CA0B7B;EAEA;EAEA;EAEA;EACA;EACA;EACA;EAGA;EACA;EACA;EAEA;EACA;EAEA;EAEA;EACA;EAEA;EACA;EAGA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EAEA,MAAMiB,gBAAgB,GAAG,CAACZ,kBAAD,GACrB,cADqB,GAErB,sBAFJ;EAIA,MAAMa,iBAAiB,GAAG,CAACL,mBAAD,GACtB,cADsB,GAEtB,sBAFJ;EAIA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAEI,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,GAAG,EAAErB,CAHP;QAIE,QAAQ,EAAEW,iBAJZ;QAKE,MAAM,EAAEE,oBALV;QAME,KAAK,EAAEX;MANT;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAYGqB,KAAK,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZZ,eAcE;MAAK,SAAS,EAAED,iBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,OADP;QAEE,EAAE,EAAC,OAFL;QAGE,QAAQ,EAAEJ,iBAHZ;QAIE,MAAM,EAAEC,qBAJV;QAKE,KAAK,EAAEd;MALT;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,EAwBGkB,KAAK,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBZ,eAyBE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACH,WAAnB;QAAgC,SAAS,EAAE,CAACA,WAAD,GAAe,UAAf,GAA4B,EAAvE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAzBF,eA4BE;MAAA,UAAMlB;IAAN;MAAA;MAAA;MAAA;IAAA,QA5BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CAxGD;;GAAMJ,W;UAYwID,Q,EAEtDA,Q;;;KAdlFC,W;AA0GN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}